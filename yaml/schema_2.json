{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "0.2",
  "type": "object",
  "description": "YAML schema for this DynSer config files",
  "properties": {
    "version": {
      "type": "string",
      "description": "config version"
    },
    "tags": {
      "type": "array",
      "description": "description of tags",
      "items": {
        "type": "object",
        "description": "tag what can be use to serialize fields",
        "properties": {
          "name": {
            "type": "string",
            "description": "tag name",
            "pattern": "^[\\w\\-]+$"
          },
          "nested": {
            "type": "array",
            "description": "pieces which describes tag [de]serialization",
            "$comment": "scope for nested tag fields are shared FIXME sure of it (use different names for different fields)",
            "items": {
              "type": "object",
              "description": "field type",
              "patternProperties": {
                "existing": {
                  "type": "object",
                  "description": "existing field rule",
                  "properties": {
                    "tag": {
                      "type": "string",
                      "description": "existing tag name"
                    },
                    "prefix": {
                      "type": "string",
                      "description": "prefix field names to prevent collisions"
                    }
                  }
                },
                "linear": {
                  "type": "object",
                  "description": "define one-pattern unnamed rule",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "field serialization pattern"
                    },
                    "fields": {
                      "type": "object",
                      "description": "fields to [de]serialize",
                      "patternProperties": {
                        "\\d+": {
                          "type": "string",
                          "description": "field name"
                        }
                      }
                    },
                    "dyn-groups": {
                      "type": "object",
                      "description": "groups what resolves in runtime",
                      "patternProperties": {
                        "\\d+": {
                          "type": "string",
                          "description": "context variable name"
                        }
                      }
                    }
                  }
                },
                "branched": {
                  "type": "object",
                  "description": "define unnamed rule with several variants",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "branching type",
                      "pattern": "script-variable|match-successfulness"
                    },
                    "variable": {
                      "type": "string",
                      "description": "[script-variable] variable name"
                    },
                    "script": {
                      "type": "string",
                      "description": "[script-variable] lua script to resolve variable value"
                    },
                    "pattern": {
                      "oneOf": [
                        {
                          "type": "array",
                          "description": "[match-successfulness] list of patterns",
                          "items": {
                            "type": "string",
                            "description": "one of patterns to match"
                          }
                        },
                        {
                          "type": "object",
                          "description": "[script-variable] map from variable values to patterns",
                          "items": {
                            "type": "string",
                            "description": "pattern to match"
                          }
                        }
                      ]
                    },
                    "fields": {
                      "type": "object",
                      "description": "fields to [de]serialize",
                      "patternProperties": {
                        "\\d+": {
                          "type": "string",
                          "description": "field name"
                        }
                      }
                    },
                    "dyn-groups": {
                      "type": "object",
                      "description": "groups what resolves in runtime",
                      "patternProperties": {
                        "\\d+": {
                          "type": "string",
                          "description": "context variable name"
                        }
                      }
                    }
                  }
                },
                "recurrent": {
                  "type": "object",
                  "$comment": "use to handle lists",
                  "description": "define repeating pattern unnamed rule",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "field serialization pattern"
                    },
                    "fields": {
                      "type": "object",
                      "description": "fields to [de]serialize",
                      "patternProperties": {
                        "\\d+": {
                          "type": "string",
                          "description": "field name"
                        }
                      }
                    },
                    "dyn-groups": {
                      "type": "object",
                      "description": "groups what resolves in runtime",
                      "patternProperties": {
                        "\\d+": {
                          "type": "string",
                          "description": "context variable name"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "serialization-script": {
            "type": "string",
            "description": "lua script for properties to fields conversion"
          },
          "deserialization-script": {
            "type": "string",
            "description": "lua script for fields to properties conversion"
          }
        }
      }
    }
  }
}